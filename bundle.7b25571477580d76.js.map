{"version":3,"file":"bundle.7b25571477580d76.js","mappings":"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","sources":["webpack:///./src/util.js"],"sourcesContent":["function mix(a, b, s) {\r\n  return a + s * (b - a);\r\n}\r\n\r\nfunction clamp(x, a, b) {\r\n  return Math.max(a, Math.min(x, b));\r\n}\r\n\r\nconst devicePixelRatio = window.devicePixelRatio || 1;\r\n\r\n\r\n\r\nconst nLines = Math.ceil(Math.min(window.innerWidth / 12., 340.0));\r\nconst pointsPerLine = Math.ceil(nLines * window.innerHeight / window.innerWidth);\r\nconst substeps = 8;\r\nvar stepSize = 0.03;\r\nvar lastStepSize = stepSize;\r\nvar stripes = 0.0;\r\n\r\n\r\n\r\nconst minDrag = 0.02;\r\nconst maxDrag = 0.2;\r\nvar drag = minDrag;\r\nconst stiffness = 0.05;\r\nconst stressResistance = 12.0;\r\nconst minPullback = 0.5\r\nconst maxPullback = 20.0;\r\nvar pullback = minPullback;\r\nconst lightAngle = 1.0;\r\nconst ld = [0.0, 0.0, 1.0];\r\nvar timestep = 0.1;\r\nvar resetRequest = 0;\r\n\r\nfunction createShader(gl, type, source) {\r\n  var shader = gl.createShader(type);\r\n  gl.shaderSource(shader, source);\r\n  gl.compileShader(shader);\r\n  var success = gl.getShaderParameter(shader, gl.COMPILE_STATUS);\r\n  if (success) {\r\n    return shader;\r\n  }\r\n\r\n  console.log(gl.getShaderInfoLog(shader));\r\n  gl.deleteShader(shader);\r\n}\r\n\r\nfunction createProgram(gl, vertexShader, fragmentShader) {\r\n  var program = gl.createProgram();\r\n  gl.attachShader(program, vertexShader);\r\n  gl.attachShader(program, fragmentShader);\r\n  gl.linkProgram(program);\r\n  var success = gl.getProgramParameter(program, gl.LINK_STATUS);\r\n  if (success) {\r\n    return program;\r\n  }\r\n\r\n  console.log(gl.getProgramInfoLog(program));\r\n  gl.deleteProgram(program);\r\n}\r\n\r\nfunction resizeCanvas() {\r\n  if (!mobile) {\r\n    canvas.width = devicePixelRatio * window.innerWidth;\r\n    canvas.height = devicePixelRatio * window.innerHeight;\r\n  }\r\n  else {\r\n    setMobileMode();\r\n  }\r\n}\r\n\r\nvar mouseD = 3.0;\r\nvar mouse = [-1.0, -1.0];\r\nvar mouseL = [-1.0, -1.0];\r\nvar mouseV = [0.0, 0.0];\r\nconst mouseS = 500;\r\n\r\nfunction mouseMove(e) {\r\n  if (mouseL[0] == -1.0) {\r\n    mouse = [e.clientX / canvas.width * devicePixelRatio, 1 - e.clientY / canvas.height * devicePixelRatio];\r\n  }\r\n  mouseL = [e.clientX / canvas.width * devicePixelRatio, 1 - e.clientY / canvas.height * devicePixelRatio];\r\n  mouseV = [mouseV[0] + mouseS * (mouseL[0] - mouse[0]), mouseV[1] + mouseS * (mouseL[1] - mouse[1])];\r\n  lastInteraction = time;\r\n}\r\n\r\nvar lastTouchX;\r\n\r\nfunction touchMove(t) {\r\n  //if (e.touches.length!=0) {return;}\r\n  e = t.touches[0];\r\n  if (mouseL[0] == -1.0) {\r\n    mouse = [e.clientX / canvas.width * devicePixelRatio, 1 - e.clientY / canvas.height * devicePixelRatio];\r\n  }\r\n  mouseL = [e.clientX / canvas.width * devicePixelRatio, 1 - e.clientY / canvas.height * devicePixelRatio];\r\n  mouseV = [mouseV[0] + mouseS * (mouseL[0] - mouse[0]), mouseV[1] + mouseS * (mouseL[1] - mouse[1])];\r\n  lastInteraction = time;\r\n\r\n}\r\n\r\nvar body = document.body, html = document.documentElement;\r\n\r\nvar docHeight = Math.max(body.scrollHeight, body.offsetHeight, html.clientHeight, html.scrollHeight, html.offsetHeight);\r\n\r\n\r\nfunction scroll(e) {\r\n  lastInteraction = time;\r\n}\r\n\r\n\r\nfunction createTexture(data) {\r\n  const texture = gl.createTexture();\r\n  gl.bindTexture(gl.TEXTURE_2D, texture);\r\n\r\n  const level = 0;\r\n  const internalFormat = gl.RGBA32F;\r\n  const border = 0;\r\n  const format = gl.RGBA;\r\n  const type = gl.FLOAT;\r\n  gl.texImage2D(gl.TEXTURE_2D, level, internalFormat, nLines, pointsPerLine, border, format, type, data);\r\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\r\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\r\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n  return texture;\r\n}\r\n\r\nfunction createInitialState() {\r\n  var positions = [];\r\n  var x, y, z;\r\n  for (i = 0; i < pointsPerLine; i++) {\r\n    for (j = 0; j < nLines; j++) {\r\n      x = 2 * ((j) / (nLines - 1) - 0.5);\r\n      y = 2 * ((i) / (pointsPerLine - 1) - 0.5);\r\n      z = Math.random() * (1.0 / nLines);\r\n      positions.push(x);\r\n      positions.push(y);\r\n      positions.push(z);\r\n      positions.push(9699690);\r\n    }\r\n  }\r\n  return positions;\r\n}\r\n\r\nfunction linesVertices() {\r\n  var gridUVs = [];\r\n  for (i = 0; i < nLines; i++) {\r\n    for (j = 0; j < pointsPerLine; j++) {\r\n      gridUVs.push(i);\r\n      gridUVs.push(j);\r\n    }\r\n  }\r\n  return gridUVs;\r\n}\r\n\r\nfunction draw() {\r\n  gl.bindFramebuffer(gl.FRAMEBUFFER, null);\r\n  gl.viewport(0, 0, canvas.width, canvas.height);\r\n  gl.enable(gl.BLEND);\r\n  gl.blendFunc(gl.ONE, gl.ONE);\r\n  gl.disable(gl.DEPTH_TEST);\r\n  gl.clearColor(c1[0], c1[1], c1[2], 0.0);\r\n  gl.clear(gl.COLOR_BUFFER_BIT);\r\n\r\n  gl.useProgram(drawProgram);\r\n\r\n  gl.enableVertexAttribArray(gridUVAttributeLocation);\r\n  gl.bindBuffer(gl.ARRAY_BUFFER, gridUVBuffer);\r\n  var size = 2;\r\n  var type = gl.FLOAT;\r\n  var normalize = false;\r\n  var stride = 0;\r\n  var offset = 0;\r\n  gl.vertexAttribPointer(gridUVAttributeLocation, size, type, normalize, stride, offset);\r\n\r\n  gl.uniform1f(drawAlphaUniformLocation, split);\r\n  gl.uniform1f(drawSizeUniformLocation, 4.0 * devicePixelRatio);\r\n  gl.uniform2f(drawResolutionUniformLocation, canvas.width, canvas.height);\r\n  gl.uniform3f(drawC0UniformLocation, c0[0], c0[1], c0[2]);\r\n\r\n  gl.uniform1i(drawStateUniformLocation, (cycle + 2) % 3);\r\n  var primitiveType = vertType;\r\n  var offset = 0;\r\n  var count = nVertices;\r\n  gl.drawArrays(primitiveType, offset, count);\r\n}\r\n\r\nfunction simulationStep() {\r\n  gl.useProgram(simProgram);\r\n  gl.disable(gl.BLEND);\r\n\r\n  gl.bindFramebuffer(gl.FRAMEBUFFER, fb);\r\n  gl.framebufferTexture2D(gl.FRAMEBUFFER, attachmentPoint, gl.TEXTURE_2D, textures[cycle], level);\r\n  gl.viewport(0, 0, nLines, pointsPerLine);\r\n  gl.enableVertexAttribArray(cornerAttributeLocation);\r\n  gl.bindBuffer(gl.ARRAY_BUFFER, cornerBuffer);\r\n\r\n  gl.clearColor(0, 0, 0, 0);\r\n  gl.clear(gl.COLOR_BUFFER_BIT);\r\n\r\n  var size = 2;\r\n  var type = gl.FLOAT;\r\n  var normalize = false;\r\n  var stride = 0;\r\n  var offset = 0;\r\n  gl.vertexAttribPointer(gridUVAttributeLocation, size, type, normalize, stride, offset);\r\n\r\n  gl.uniform2f(simGridUniformLocation, nLines, pointsPerLine);\r\n  gl.uniform2f(simResolutionUniformLocation, canvas.width, canvas.height);\r\n  gl.uniform1f(simStepSizeUniformLocation, stepSize / substeps);\r\n  gl.uniform1f(simDragUniformLocation, drag);\r\n  gl.uniform2f(simStiffnessUniformLocation, stiffness * nLines * pointsPerLine, stressResistance);\r\n  gl.uniform1f(simPullbackUniformLocation, pullback);\r\n  gl.uniform4f(simMouseUniformLocation, mouse[0], mouse[1], mouseV[0], mouseV[1]);\r\n  gl.uniform1f(simSplitUniformLocation, split);\r\n\r\n  gl.uniform1i(simLastStateUniformLocation, (cycle + 2) % 3);\r\n  gl.uniform1i(simPenultimateStateUniformLocation, (cycle + 1) % 3);\r\n  gl.uniform1i(simRestUniformLocation, 3);\r\n\r\n  var primitiveType = gl.TRIANGLE_FAN;\r\n  var offset = 0;\r\n  var count = 4;\r\n  gl.drawArrays(primitiveType, offset, count);\r\n  cycle = (cycle + 1) % 3;\r\n  time = time + timestep / substeps;\r\n  lastStepSize = stepSize;\r\n}\r\n\r\nlet initTime;\r\nvar time = 0.0;\r\nvar lastInteraction = 0.0;\r\nvar timeSinceInteraction = 0.0;\r\n\r\nvar scrollPos = 0.0;\r\nvar split = 0.0;\r\n\r\nfunction update(t) {\r\n  if (initTime == undefined) {\r\n    initTime = t;\r\n    timeSinceInteraction = 0;\r\n    lastInteraction = t;\r\n  }\r\n  time = t;\r\n  timeSinceInteraction = (time - lastInteraction) / 1000.0;\r\n\r\n  pullback = mix(minPullback, maxPullback, clamp((timeSinceInteraction) / 4.0, 0.0, 1.0));\r\n  drag = mix(minDrag, maxDrag, clamp((timeSinceInteraction) / 4.0, 0.0, 1.0));\r\n\r\n  for (i = 0; i < substeps; i++) {\r\n    simulationStep();\r\n  }\r\n\r\n  mouse = [(mouse[0] * (mouseD - 1.0) + mouseL[0]) / mouseD, (mouse[1] * (mouseD - 1.0) + mouseL[1]) / mouseD];\r\n  mouseV = [mouseV[0] * 0.85, mouseV[1] * 0.85];\r\n\r\n  draw();\r\n  scrollPos = window.scrollY;\r\n  let contentBot = contentLoaded ? document.getElementById('content').getBoundingClientRect().bottom : Infinity;\r\n\r\n  split = clamp(scrollPos / window.innerHeight, 0.0, 1.0) + clamp((-contentBot + window.innerHeight) / window.innerHeight, 0.0, 1.0);\r\n  window.requestAnimationFrame(update);\r\n}\r\n\r\nvar gl = canvas.getContext(\"webgl2\");\r\n\r\nif (!gl) {\r\n  console.log(\"webgl2 not supported!\")\r\n}\r\n\r\nconst ext = gl.getExtension(\"EXT_color_buffer_float\");\r\nif (!ext) {\r\n  console.log(\"sorry, can't render to floating point textures\");\r\n}\r\n\r\nlet mobile;\r\n\r\nif (navigator.userAgent.match(/Android/i)\r\n  || navigator.userAgent.match(/webOS/i)\r\n  || navigator.userAgent.match(/iPhone/i)\r\n  || navigator.userAgent.match(/iPad/i)\r\n  || navigator.userAgent.match(/iPod/i)\r\n  || navigator.userAgent.match(/BlackBerry/i)\r\n  || navigator.userAgent.match(/Windows Phone/i)) {\r\n  mobile = true;\r\n  setMobileMode()\r\n}\r\nelse {\r\n  mobile = false;\r\n}\r\n\r\nwindow.addEventListener('resize', resizeCanvas);\r\nwindow.addEventListener('mousemove', mouseMove);\r\nwindow.addEventListener('wheel', scroll);\r\nwindow.addEventListener('touchmove', touchMove);\r\nwindow.addEventListener('touchstart', touchMove);\r\n\r\nconst initialState = new Float32Array(createInitialState());\r\n\r\nvar texture0 = createTexture(initialState);\r\nvar texture1 = createTexture(initialState);\r\nvar texture2 = createTexture(initialState);\r\nvar restTexture = createTexture(initialState);\r\n\r\nconst textures = [texture0, texture1, texture2];\r\n\r\n//draw program setup\r\n{\r\n  var drawVertexShader = createShader(gl, gl.VERTEX_SHADER, drawVertexShaderSource);\r\n  var drawFragmentShader = createShader(gl, gl.FRAGMENT_SHADER, drawFragmentShaderSource);\r\n  var drawProgram = createProgram(gl, drawVertexShader, drawFragmentShader);\r\n\r\n  var gridUVAttributeLocation = gl.getAttribLocation(drawProgram, \"a_uv\");\r\n  var gridUVBuffer = gl.createBuffer();\r\n\r\n  var vertices;\r\n  vertices = linesVertices();\r\n\r\n  var nVertices = nLines * pointsPerLine;\r\n  var vertType = gl.POINTS;\r\n\r\n  gl.bindBuffer(gl.ARRAY_BUFFER, gridUVBuffer);\r\n  gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(vertices), gl.STATIC_DRAW);\r\n\r\n\r\n  var drawAlphaUniformLocation = gl.getUniformLocation(drawProgram, \"u_alpha\");\r\n  var drawSizeUniformLocation = gl.getUniformLocation(drawProgram, \"u_size\");\r\n  var drawC0UniformLocation = gl.getUniformLocation(drawProgram, \"u_c0\");\r\n  var drawResolutionUniformLocation = gl.getUniformLocation(drawProgram, \"u_resolution\");\r\n\r\n  var drawStateUniformLocation = gl.getUniformLocation(drawProgram, \"s_state\");\r\n}\r\n\r\n\r\n//sim program setup\r\n{\r\n  var simVertexShader = createShader(gl, gl.VERTEX_SHADER, simVertexShaderSource);\r\n  var simFragmentShader = createShader(gl, gl.FRAGMENT_SHADER, simFragmentShaderSource);\r\n  var simProgram = createProgram(gl, simVertexShader, simFragmentShader);\r\n\r\n  var cornerAttributeLocation = gl.getAttribLocation(simProgram, \"a_corner\");\r\n  var cornerBuffer = gl.createBuffer();\r\n  const corners = [-1, -1, 1, -1, 1, 1, -1, 1];\r\n\r\n  gl.bindBuffer(gl.ARRAY_BUFFER, cornerBuffer);\r\n  gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(corners), gl.STATIC_DRAW);\r\n\r\n  var simGridUniformLocation = gl.getUniformLocation(simProgram, \"u_grid\");\r\n  var simResolutionUniformLocation = gl.getUniformLocation(simProgram, \"u_resolution\");\r\n  var simTimeUniformLocation = gl.getUniformLocation(simProgram, \"u_time\");\r\n  var simStepSizeUniformLocation = gl.getUniformLocation(simProgram, \"u_step_size\");\r\n  var simDragUniformLocation = gl.getUniformLocation(simProgram, \"u_drag\");\r\n  var simStiffnessUniformLocation = gl.getUniformLocation(simProgram, \"u_stiffness\");\r\n  var simPullbackUniformLocation = gl.getUniformLocation(simProgram, \"u_pullback\");\r\n  var simMouseUniformLocation = gl.getUniformLocation(simProgram, \"u_mouse\");\r\n  var simSplitUniformLocation = gl.getUniformLocation(simProgram, \"u_split\");\r\n\r\n  var simLastStateUniformLocation = gl.getUniformLocation(simProgram, \"s_last_state\");\r\n  var simPenultimateStateUniformLocation = gl.getUniformLocation(simProgram, \"s_penultimate_state\");\r\n  var simRestUniformLocation = gl.getUniformLocation(simProgram, \"s_rest_state\");\r\n\r\n  var cycle = 0;\r\n}\r\n\r\ngl.activeTexture(gl.TEXTURE0);\r\ngl.bindTexture(gl.TEXTURE_2D, texture0);\r\n\r\ngl.activeTexture(gl.TEXTURE1);\r\ngl.bindTexture(gl.TEXTURE_2D, texture1);\r\n\r\ngl.activeTexture(gl.TEXTURE2);\r\ngl.bindTexture(gl.TEXTURE_2D, texture2);\r\n\r\ngl.activeTexture(gl.TEXTURE3);\r\ngl.bindTexture(gl.TEXTURE_2D, restTexture);\r\n\r\nvar fb = gl.createFramebuffer();\r\nconst level = 0;\r\nconst attachmentPoint = gl.COLOR_ATTACHMENT0;\r\nvar time = 0;\r\n\r\ncanvas.width = devicePixelRatio * window.innerWidth;\r\ncanvas.height = devicePixelRatio * window.innerHeight;\r\n\r\nloadData();\r\nupdate(0.0)\r\n"],"names":["mix","a","b","s","clamp","x","Math","max","min","devicePixelRatio","window","nLines","ceil","innerWidth","pointsPerLine","innerHeight","drag","pullback","createShader","gl","type","source","shader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","console","log","getShaderInfoLog","deleteShader","createProgram","vertexShader","fragmentShader","program","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","deleteProgram","mouse","mouseL","mouseV","mouseS","touchMove","t","e","touches","clientX","canvas","width","clientY","height","lastInteraction","time","body","document","html","documentElement","createTexture","data","texture","bindTexture","TEXTURE_2D","internalFormat","RGBA32F","format","RGBA","FLOAT","texImage2D","texParameteri","TEXTURE_MIN_FILTER","NEAREST","TEXTURE_MAG_FILTER","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","simulationStep","useProgram","simProgram","disable","BLEND","bindFramebuffer","FRAMEBUFFER","fb","framebufferTexture2D","attachmentPoint","textures","cycle","level","viewport","enableVertexAttribArray","cornerAttributeLocation","bindBuffer","ARRAY_BUFFER","cornerBuffer","clearColor","clear","COLOR_BUFFER_BIT","offset","vertexAttribPointer","gridUVAttributeLocation","uniform2f","simGridUniformLocation","simResolutionUniformLocation","uniform1f","simStepSizeUniformLocation","stepSize","simDragUniformLocation","simStiffnessUniformLocation","simPullbackUniformLocation","uniform4f","simMouseUniformLocation","simSplitUniformLocation","split","uniform1i","simLastStateUniformLocation","simPenultimateStateUniformLocation","simRestUniformLocation","primitiveType","TRIANGLE_FAN","drawArrays","initTime","scrollHeight","offsetHeight","clientHeight","timeSinceInteraction","scrollPos","getContext","mobile","getExtension","navigator","userAgent","match","setMobileMode","addEventListener","initialState","Float32Array","y","z","positions","i","j","random","push","createInitialState","texture0","texture1","texture2","restTexture","vertices","drawVertexShader","VERTEX_SHADER","drawVertexShaderSource","drawFragmentShader","FRAGMENT_SHADER","drawFragmentShaderSource","drawProgram","getAttribLocation","gridUVBuffer","createBuffer","gridUVs","linesVertices","nVertices","vertType","POINTS","bufferData","STATIC_DRAW","drawAlphaUniformLocation","getUniformLocation","drawSizeUniformLocation","drawC0UniformLocation","drawResolutionUniformLocation","drawStateUniformLocation","simVertexShader","simVertexShaderSource","simFragmentShader","simFragmentShaderSource","corners","activeTexture","TEXTURE0","TEXTURE1","TEXTURE2","TEXTURE3","createFramebuffer","COLOR_ATTACHMENT0","loadData","update","undefined","enable","blendFunc","ONE","DEPTH_TEST","c1","uniform3f","c0","count","draw","scrollY","contentBot","contentLoaded","getElementById","getBoundingClientRect","bottom","Infinity","requestAnimationFrame"],"sourceRoot":""}